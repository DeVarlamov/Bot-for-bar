import re
import telebot
from telebot import types
import config

bot = telebot.TeleBot(config.token)
chat = (config.chat_id)

menu = types.KeyboardButton("üìí –ú–µ–Ω—é")
reserve = types.KeyboardButton("üëΩ –†–µ–∑–µ—Ä–≤ —Å—Ç–æ–ª–∞")
cancellation = types.KeyboardButton("–æ—Ç–º–µ–Ω–∞‚õîÔ∏è")
bar_btn = types.KeyboardButton("–ë–∞—Äü•É")
kitchen_btn = types.KeyboardButton("–ö—É—Ö–Ω—èüçï")
back = types.KeyboardButton("üîô")

craft = types.KeyboardButton("–°–∞–º–∏ –Ω–∞–ª–∏–≤–∞–µ–ºüõ†")
vino = types.KeyboardButton("–í–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞üç∑")
strong = types.KeyboardButton("–ö—Ä–µ–ø–∞—áüöÄ")
non_alcoholic = types.KeyboardButton("–ë–µ–∑ –ê–ª–∫–æüèá")


def start_markup():
    """—Å—Ç–∞—Ä—Ç ."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(menu, reserve)
    return markup


def main_menu_markup():
    """–ú–µ–Ω—é ."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(bar_btn, kitchen_btn, back)
    return markup


def bar_menu_markup():
    """–±–∞—Ä –º–µ–Ω—é ."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(craft, vino, strong, non_alcoholic, back)
    return markup


def send_photo_with_markup(chat_id, photo_path, caption, markup):
    """–§–æ—Ç–æ."""
    with open(photo_path, 'rb') as photo:
        bot.send_photo(chat_id, photo, caption=caption, reply_markup=markup)


@bot.message_handler(commands=['start'])
def start(message):
    """–§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞."""
    markup = start_markup()
    send_photo_with_markup(message.chat.id, '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–ª–æ–≥–æ.jpg', 
                           "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç "
                           "–±–∞—Ä –º–µ—Ä–∑–∞–≤—á–∏–∫–∏.üê¥üê¥üê¥".format(message.from_user), 
                           markup)


@bot.message_handler(content_types=['text'])
def func(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    if message.text == "üëΩ –†–µ–∑–µ—Ä–≤ —Å—Ç–æ–ª–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(cancellation)
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–¥–¥.–º–º.):",
                         reply_markup=markup)
        bot.register_next_step_handler(message, get_date)

    elif message.text == "üìí –ú–µ–Ω—é":
        markup = main_menu_markup()
        bot.send_message(message.chat.id, text="–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å",
                         reply_markup=markup)

    elif message.text == "üîô":
        markup = start_markup()
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                         reply_markup=markup)

    elif message.text == "–ë–∞—Äü•É":
        markup = bar_menu_markup()
        bot.send_message(message.chat.id, text="–ù—É, {0.first_name}! "
                         "–ß–µ–º –Ω–∞—Ö—É—è—Ä–∏–º—Å—è?".format(message.from_user),
                         reply_markup=markup)

    elif message.text == "–ö—É—Ö–Ω—èüçï":
        markup = main_menu_markup()
        send_photo_with_markup(message.chat.id,
                               '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–∫—É—Ö–Ω—è.jpg',
                               "{0.first_name} —ç—Ç–æ –µ–¥–∞ –µ–µ –µ–¥—è—Ç!".format(
                                message.from_user), markup)

    elif message.text == "–°–∞–º–∏ –Ω–∞–ª–∏–≤–∞–µ–ºüõ†":
        markup = bar_menu_markup()
        send_photo_with_markup(message.chat.id, 
                               '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–±–∞—Ä.jpg', 
                               "{0.first_name}, –∞ —Ç—ã —à—É—Ç–∏—Ç—å –Ω–µ –ª—é–±–∏—à—å!".format(
                                message.from_user), markup)

    elif message.text == "–í–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞üç∑":
        markup = bar_menu_markup()
        send_photo_with_markup(message.chat.id,
                               '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–í–∏–Ω–æ.jpg', 
                               "{0.first_name}, –≤–æ—Ç –Ω–∞—à–∞ –≤–∏–Ω–Ω–æ—Å—Ç—å".format(
                                message.from_user), markup)

    elif message.text == "–ò–≥–æ—Ä—å –≥–µ–π":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(menu, back)
        send_photo_with_markup(message.chat.id,
                               '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–ò–≥–æ—Ä—å.jpg',
                               "{0.first_name}, –¢—ã —Ö–æ—Ç–µ–ª —Å–∫–∞–∑–∞—Ç—å –µ–≥–æ "
                               "–≤–µ–ª–∏—á–µ—Å—Ç–≤–æ –ì–µ–π—Å—Ç–≤–æ?!".format(
                                message.from_user), markup)

    elif message.text == "–ö—Ä–µ–ø–∞—áüöÄ":
        markup = bar_menu_markup()
        send_photo_with_markup(
            message.chat.id, '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–∫—Ä–µ–ø–∫–∏–π.bmp',
            "{0.first_name}, –Ω—É –ø–æ–µ—Ö–∞–ª–∏".format(message.from_user), markup)

    elif message.text == "–ë–µ–∑ –ê–ª–∫–æüèá":
        markup = bar_menu_markup()
        send_photo_with_markup(
            message.chat.id, '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–ë–ê.jpg',
            "{0.first_name}, –í—ã—Ö–æ–¥–Ω–æ–π, —Ç–∞–∫ –≤—ã—Ö–æ–¥–Ω–æ–π!".format(
             message.from_user), markup)

    else:
        bot.send_message(message.chat.id,
                         text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")


def get_date(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã."""
    date_pattern = r'^\d{2}\.\d{2}$'
    if re.match(date_pattern, message.text):
        date = message.text
        if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in date.lower():
            bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",)
            start(message)
        else:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (—á—á:–º–º):")
            bot.register_next_step_handler(message, get_time, date)
    else:
        if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in message.text.lower():
            bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",)
            start(message)
        else:
            bot.send_message(message.chat.id,
                             text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.")
            bot.register_next_step_handler(message, get_date)


def get_time(message, date):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏."""
    time = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –≤–≤–µ–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú
    if not re.match(r'^\d{1,2}:\d{2}$', time):
        if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in time.lower():
            bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            start(message)
        bot.send_message(message.chat.id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å—ã:–º–∏–Ω—É—Ç–∞")
        return bot.register_next_step_handler(message, get_time, date)
    if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in time.lower():
        bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        start(message)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:")
        bot.register_next_step_handler(message, get_guests, date, time)


def get_guests(message, date, time):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π."""
    guests = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
    if not guests.isdigit():
        if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in time.lower():
            bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            start(message)
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≥–æ—Å—Ç–µ–π")
        return bot.register_next_step_handler(message, get_guests, date, time)
    if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in guests.lower():
        bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        start(message)
    else:
        if "–æ—Ç–º–µ–Ω–∞‚õîÔ∏è" in guests.lower():
            bot.send_message(message.chat.id, text="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            start(message)
        else:
            keyboard = types.ReplyKeyboardMarkup(row_width=1,
                                                 resize_keyboard=True)
            button_phone = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω",
                                                request_contact=True)
        keyboard.add(button_phone)
        bot.send_message(message.chat.id, '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±—Ä–æ–Ω–∏',
                         reply_markup=keyboard)
        bot.register_next_step_handler(
            message, get_contact_info,
            date, time, guests
            )


def get_contact_info(message, date, time, guests):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    contact_info = message.contact
    # Check if the message text contains keywords to cancel the reservation
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back = types.KeyboardButton("üîô")
    markup.add(back)
    bot.send_message(message.chat.id, text="–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–∑–µ—Ä–≤! "
                     " –ú—ã –∂–¥–µ–º {}—Ö –≥–æ—Å—Ç–µ–π, {} –≤ {} ."
                     "\n–í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: {} ({})".format(
                            guests, date, time, contact_info.first_name,
                            contact_info.phone_number
                            ), reply_markup=markup)
    bot.send_message(
            chat_id=chat,
            text="–í–Ω–∏–º–∞–Ω–∏–µ –±—Ä–æ–Ω—å –Ω–∞ {} "
            "–≤ {} –¥–ª—è {} –≥–æ—Å—Ç–µ–π. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è"
            " –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {} ({}). UserID({})".format(
                date, time, guests, contact_info.first_name,
                contact_info.phone_number,
                contact_info.user_id
                                           ))


bot.polling(none_stop=True)
