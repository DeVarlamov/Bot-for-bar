
from telegram.ext import Updater
from telegram.ext import (CommandHandler,
                          ConversationHandler,
                          MessageHandler,
                          Filters)
import telegram


# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
VINE_DAY = 0
VINE_MONTH = 1
VINE_TIME = 2
VINE_GUESTS = 3
VINE_CONTACT = 4


def start(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start."""
    photo_path = '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–ª–æ–≥–æ.jpg'
    photo_file = open(photo_path, 'rb')
    context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_file)
    custom_keyboard = [['/menuüìí', '/reserveüëΩ']]
    reply_markup = telegram.ReplyKeyboardMarkup(
        custom_keyboard, one_time_keyboard=True, resize_keyboard=True)
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–ú–µ—Ä–∑–∞–≤—á–∏–∫–∏ –Ω–∞ —Å–≤—è–∑–∏ –∫–æ–≥–æ —á–µ–≥–æ —Å—É–∫–∞! üï∂",
                             reply_markup=reply_markup)
    photo_file.close()


def reserve(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã menu."""
    context.user_data['reservation'] = {}
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å (—á–∏—Å–ª–æ) –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∞:")
    return VINE_DAY


def vine_choice1(update, context):
    """–í–≤–æ–¥ –º–µ—Å—è—Ü–∞."""
    day = update.message.text
    context.user_data['reservation']['day'] = day
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü (–Ω–∞–∑–≤–∞–Ω–∏–µ) –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∞:")
    return VINE_MONTH


def vine_choice2(update, context):
    """–í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏."""
    month = update.message.text
    context.user_data['reservation']['month'] = month
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã) –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∞:")
    return VINE_TIME


def vine_choice3(update, context):
    """–í–≤–æ–¥ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π."""
    time = update.message.text
    context.user_data['reservation']['time'] = time
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∞:")
    return VINE_GUESTS


def vine_choice5(update, context):
    """–í–≤–æ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
    contact_info = update.message.text
    context.user_data['reservation']['contact'] = contact_info
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:")
    return VINE_CONTACT


def vine_choice4(update, context):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏."""
    guests = update.message.text
    context.user_data['reservation']['guests'] = guests
    reservation_data = context.user_data['reservation']
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–∑–µ—Ä–≤! –í–∞—à —Å—Ç–æ–ª–∏–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ {day} {month} "
        "–≤ {time} –¥–ª—è {contact} –≥–æ—Å—Ç–µ–π. –í–∞—à–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è"
        "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {guests}.".format(**reservation_data)
        )
    context.bot.send_message(
        chat_id='1106421798',
        text="–±—Ä–æ–Ω—å –Ω–∞  {day} {month} "
        "–≤ {time} –¥–ª—è {contact} –≥–æ—Å—Ç–µ–π. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è"
        "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {guests}.".format(**reservation_data)
        )

    return ConversationHandler.END


def menu(update, context):
    """–ú–µ–Ω—é."""
    menu_keyboard = [['/barüç∏', '/kuhnyüçñ'], ['/start‚è™']]
    reply_markup = telegram.ReplyKeyboardMarkup(
        menu_keyboard, one_time_keyboard=True, resize_keyboard=True)
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–•–æ—Ä–æ—à–æ –¥–∞–≤–∞–π üï∂",
        reply_markup=reply_markup
    )


def bar(update, context):
    """–ë–∞—Ä ."""
    photo_path = '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–±–∞—Ä.jpg'
    photo_file = open(photo_path, 'rb')
    context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_file)

    bar_keyboard = [['/start‚è™', '/menuüìí']]
    reply_markup = telegram.ReplyKeyboardMarkup(
        bar_keyboard, one_time_keyboard=True,
        resize_keyboard=True
        )
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–æ–∫–µ–π üï∂",
                             reply_markup=reply_markup)


def kuhny(update, context):
    """–ö—É—Ö–Ω—è."""
    photo_path = '–∫–∞—Ä—Ç–∏–Ω–∫–∏/–∫—É—Ö–Ω—è.jpg'
    photo_file = open(photo_path, 'rb')
    context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo_file)

    kuhny_keyboard = [['/start‚è™', '/menuüìí']]
    reply_markup = telegram.ReplyKeyboardMarkup(
        kuhny_keyboard, one_time_keyboard=True,
        resize_keyboard=True
        )
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–æ–∫–µ–π üï∂",
                             reply_markup=reply_markup)


updater = Updater(token='6134349352:AAFkZye0yzWv42zytlJMSM2uGYp6Hc3clIU',
                  use_context=True)

# Create an instance of the Dispatcher class using updater.dispatcher
dispatcher = updater.dispatcher
conv_handler = ConversationHandler(
    entry_points=[CommandHandler('reserve', reserve)],
    states={
        VINE_DAY: [(MessageHandler(Filters.text, vine_choice1))],
        VINE_MONTH: [(MessageHandler(Filters.text, vine_choice2))],
        VINE_TIME: [(MessageHandler(Filters.text, vine_choice3))],
        VINE_CONTACT: [(MessageHandler(Filters.text, vine_choice4))],
        VINE_GUESTS: [(MessageHandler(Filters.text, vine_choice5))],
    },
    fallbacks=[],)

# Add our handlers to the dispatcher
dispatcher.add_handler(CommandHandler('start', start))
dispatcher.add_handler(CommandHandler('menu', menu))
dispatcher.add_handler(CommandHandler('bar', bar))
dispatcher.add_handler(CommandHandler('kuhny', kuhny))
dispatcher.add_handler(conv_handler)

# Start the bot
updater.start_polling()
